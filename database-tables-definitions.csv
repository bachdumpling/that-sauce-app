"table_name","column_name","data_type","is_nullable","column_default"
"creators","id","uuid","NO","uuid_generate_v4()"
"creators","profile_id","uuid","YES","null"
"creators","username","text","NO","null"
"creators","location","text","YES","null"
"creators","bio","text","YES","null"
"creators","primary_role","ARRAY","YES","'{}'::text[]", "null"
"creators","social_links","jsonb","YES","'{}'::jsonb"
"creators","years_of_experience","integer","YES","null"
"creators","created_at","timestamp with time zone","YES","now()"
"creators","updated_at","timestamp with time zone","YES","now()"
"images","id","uuid","NO","uuid_generate_v4()"
"images","project_id","uuid","NO","null"
"images","creator_id","uuid","NO","null"
"images","url","text","NO","null"
"images","alt_text","text","YES","null"
"images","resolutions","jsonb","YES","'{}'::jsonb"
"images","ai_analysis","text","YES","null"
"images","embedding","USER-DEFINED","YES","null"
"images","order","integer","YES","null"
"images","created_at","timestamp with time zone","YES","now()"
"images","updated_at","timestamp with time zone","YES","now()"
"portfolios","id","uuid","NO","uuid_generate_v4()"
"portfolios","creator_id","uuid","NO","null"
"portfolios","project_ids","ARRAY","YES","'{}'::uuid[]"
"portfolios","ai_analysis","text","YES","null"
"portfolios","embedding","USER-DEFINED","YES","null"
"portfolios","last_updated","timestamp with time zone","YES","null"
"portfolios","created_at","timestamp with time zone","YES","now()"
"portfolios","updated_at","timestamp with time zone","YES","now()"
"profiles","id","uuid","NO","null"
"profiles","first_name","text","YES","null"
"profiles","last_name","text","YES","null"
"profiles","role","text","NO","'user'::text"
"profiles","tier","text","NO","'free'::text"
"profiles","search_count","integer","YES","0"
"profiles","max_searches","integer","YES","10"
"profiles","onboarding_completed","boolean","NO","false"
"profiles","created_at","timestamp with time zone","YES","now()"
"profiles","updated_at","timestamp with time zone","YES","now()"
"projects","id","uuid","NO","uuid_generate_v4()"
"projects","creator_id","uuid","NO","null"
"projects","portfolio_id","uuid","NO","null"
"projects","title","text","NO","null"
"projects","behance_url","text","YES","null"
"projects","description","text","YES","null"
"projects","year","integer","YES","null"
"projects","featured","boolean","YES","false"
"projects","order","integer","YES","null"
"projects","ai_analysis","text","YES","null"
"projects","embedding","USER-DEFINED","YES","null"
"projects","created_at","timestamp with time zone","YES","now()"
"projects","updated_at","timestamp with time zone","YES","now()"
"scrape_history","id","bigint","NO","null"
"scrape_history","username","text","NO","null"
"scrape_history","field","text","NO","null"
"scrape_history","scraped_at","timestamp with time zone","YES","now()"
create table public.videos (
  id uuid not null default extensions.uuid_generate_v4 (),
  project_id uuid not null,
  creator_id uuid not null,
  vimeo_id text null,
  title text not null,
  description text null,
  categories text[] null default '{}'::text[],
  ai_analysis text null,
  embedding public.vector null,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  url text null,
  youtube_url text null,
  constraint videos_pkey primary key (id),
  constraint videos_vimeo_id_key unique (vimeo_id),
  constraint videos_creator_id_fkey foreign KEY (creator_id) references creators (id) on delete CASCADE,
  constraint videos_project_id_fkey foreign KEY (project_id) references projects (id) on delete CASCADE
) TABLESPACE pg_default;

create index IF not exists idx_videos_creator_id on public.videos using btree (creator_id) TABLESPACE pg_default;

create index IF not exists idx_videos_project_id on public.videos using btree (project_id) TABLESPACE pg_default;

create index IF not exists idx_videos_vimeo_id on public.videos using btree (vimeo_id) TABLESPACE pg_default;

create index IF not exists videos_embedding_idx on public.videos using ivfflat (embedding vector_cosine_ops)
with
  (lists = '100') TABLESPACE pg_default;

create trigger update_videos_updated_at BEFORE
update on videos for EACH row
execute FUNCTION update_updated_at_column ();

create table public.projects (
  id uuid not null default extensions.uuid_generate_v4 (),
  creator_id uuid not null,
  portfolio_id uuid not null,
  title text not null,
  behance_url text null,
  description text null,
  year integer null,
  featured boolean null default false,
  "order" integer null,
  ai_analysis text null,
  embedding public.vector null,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  constraint projects_pkey primary key (id),
  constraint projects_creator_id_fkey foreign KEY (creator_id) references creators (id),
  constraint projects_portfolio_id_fkey foreign KEY (portfolio_id) references portfolios (id)
) TABLESPACE pg_default;

create index IF not exists idx_projects_creator_id on public.projects using btree (creator_id) TABLESPACE pg_default;

create index IF not exists idx_projects_portfolio_id on public.projects using btree (portfolio_id) TABLESPACE pg_default;

create index IF not exists projects_embedding_idx on public.projects using ivfflat (embedding vector_cosine_ops)
with
  (lists = '100') TABLESPACE pg_default;

create trigger update_projects_updated_at BEFORE
update on projects for EACH row
execute FUNCTION update_updated_at_column ();
create table public.images (
  id uuid not null default extensions.uuid_generate_v4 (),
  project_id uuid not null,
  creator_id uuid not null,
  url text not null,
  alt_text text null,
  resolutions jsonb null default '{}'::jsonb,
  ai_analysis text null,
  embedding public.vector null,
  "order" integer null,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  failed_analysis boolean null default false,
  failure_reason text null,
  constraint images_pkey primary key (id),
  constraint images_creator_id_fkey foreign KEY (creator_id) references creators (id),
  constraint images_project_id_fkey foreign KEY (project_id) references projects (id)
) TABLESPACE pg_default;

create index IF not exists idx_images_creator_id on public.images using btree (creator_id) TABLESPACE pg_default;

create index IF not exists idx_images_project_id on public.images using btree (project_id) TABLESPACE pg_default;

create index IF not exists images_embedding_idx on public.images using ivfflat (embedding vector_cosine_ops)
with
  (lists = '100') TABLESPACE pg_default;

create index IF not exists idx_images_failed_analysis on public.images using btree (failed_analysis) TABLESPACE pg_default;

create trigger update_images_updated_at BEFORE
update on images for EACH row
execute FUNCTION update_updated_at_column ();